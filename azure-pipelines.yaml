trigger:
- main

pr: none
pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    # Extracting the version number from the config.sh file
    VERSION_LINE=$(sed -n '2p' ./config.sh)
    APP_VERSION=$(echo $VERSION_LINE | cut -d '"' -f 2)
    echo "v$APP_VERSION" > appVersion.txt
    echo "##vso[task.setvariable variable=appVersion]v$APP_VERSION"

  displayName: 'Extract App Version'

- script: |
    tar -czf $(Build.ArtifactStagingDirectory)/$(Build.BuildId).tar.gz --exclude='.git' --exclude='*.tar.gz' .
  displayName: 'Package Application'

- publish: $(Build.ArtifactStagingDirectory)
  artifact: $(Build.BuildId)

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'cleverpine-github-serviceaccount'
    repositoryName: 'cleverpine/Booty'
    action: 'create'
    tagSource: 'userSpecifiedTag'
    tag: '$(appVersion)'
    title: '$(appVersion)'
    changeLogType: issueBased

- publish: $(System.DefaultWorkingDirectory)/appVersion.txt
  artifact: appVersionArtifact
  displayName: 'Publish appVersion Artifact'

# - task: TriggerBuild@4
#   inputs:
#     definitionIsInCurrentTeamProject: true
#     buildDefinition: 'cleverpine.homebrew-booty'
#     queueBuildForUserThatTriggeredBuild: true
#     ignoreSslCertificateErrors: false
#     useSameSourceVersion: false
#     useCustomSourceVersion: false
#     useSameBranch: false
#     branchToUse: 'main'
#     waitForQueuedBuildsToFinish: false
#     storeInEnvironmentVariable: false
#     authenticationMethod: 'Personal Access Token'
#     password: '$(Dobry_PAT)'
#     enableBuildInQueueCondition: false
#     dependentOnSuccessfulBuildCondition: false
#     dependentOnFailedBuildCondition: false
#     checkbuildsoncurrentbranch: false
#     failTaskIfConditionsAreNotFulfilled: false
